{"version":3,"sources":["components/note/note.js","components/table/table.js","components/search/search.js","components/login/login.js","App.js","serviceWorker.js","index.js"],"names":["Note","react_default","a","createElement","className","scope","Table","props","selectedMentor","json","mentor","students","pairs","tasks","score","studentNames","map","student","key","scoreForTasks","task","allStudentScore","studentScore","find","item","id","getClassNameByStatus","status","react","note_note","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedOption","handleChange","setState","updateMentor","value","localStorage","setItem","_this2","options","mentorsList","label","react_select_esm","onChange","defaultValue","defaultInputValue","selectValue","Component","onFailure","response","Login","_ref","mentorLogin","GitHubLogin_default","clientId","redirectUri","onSuccess","App","setTimeout","fetch","then","data","getItem","login","displayMentorByLogin","bind","search_search","keys","updateSelectedMentor","table_table","react_loading_default","type","color","height","width","newMentor","_this3","url","code","token","catch","error","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24395b9a.chunk.js","sourcesContent":["import React from 'react';\nimport './note.css';\n\nconst Note = () => {\n  return (\n    <div className=\"container note-container\">\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            <th scope=\"row\" className=\"checked\"></th>\n            <td>Task is checked by mentor. See the score.</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"to-do\"></th>\n            <td>Task is in the ToDo state.</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"in-progress\"></th>\n            <td>Student is working on the task now.</td>\n          </tr>\n           <tr>\n            <th scope=\"row\" className=\"checking\"></th>\n            <td>Task needs to be checked.</td>\n          </tr>\n           <tr>\n            <th scope=\"row\" className=\"no-result\"></th>\n            <td>Time for checking is over. No result.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n\nexport default Note;","import React, {Fragment} from 'react';\nimport './table.css';\nimport Note from './../note/note';\n\nconst Table = (props) => {\n  if (props.selectedMentor && props.json){\n    const mentor = props.selectedMentor;\n    const json = props.json;\n    const students = json.pairs[mentor];\n    if (!students) {\n      return 'Studends not found';\n    }\n    const tasks = json.tasks;\n    const score = json.score;\n    const studentNames = students.map((student, key) => {\n      return (\n        <th scope=\"col\" key={key}>{student}</th>\n      )\n    });\n    const scoreForTasks = tasks.map((task, key) => {\n      const allStudentScore = students.map((student, key) => {\n        if (score[student]) {\n          const studentScore = score[student].find(item => {\n            return item.id == task.id;\n          });\n          if (studentScore) {\n            return <td className=\"checked\" key={key}>{studentScore.score}</td>\n          }\n        }\n        return <td className={getClassNameByStatus(task.status)} key={key}></td>\n      })\n      return (\n        <tr key={key}><th scope=\"row\">{task.task}</th>{allStudentScore}</tr>\n      )\n    })\n    return (\n      <Fragment>\n        <div className=\"container\">\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" className=\"empty\"></th>\n                {studentNames}\n              </tr>\n            </thead>\n            <tbody>\n            {scoreForTasks}\n            </tbody>\n          </table>\n        </div>\n        <Note />\n      </Fragment>\n    );\n  } else {\n    return '';\n  }\n}\n\nexport default Table;\n\nconst getClassNameByStatus = (status) => {\n  switch (status) {\n    case 'Checked': {\n      return 'no-result';\n    }\n    case 'Checking': {\n      return 'checking';\n    }\n    case 'ToDo': {\n      return 'to-do';\n    } \n    case 'In Progress': {\n      return 'in-progress';\n    }\n    default:\n      return 'no-result';\n  }\n}\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport './search.css'\n\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     selectedOption: props.selectedMentor\n    }\n    this.handleChange = (selectedOption) => {\n      this.setState({ selectedOption });\n      this.props.updateMentor(selectedOption.value);\n      localStorage.setItem('mentor', selectedOption.value);\n    }\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n    const options = this.props.mentorsList.map(item => {\n      return {\n        value: item,\n        label: item\n      }\n    });\n    return (\n      <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n        defaultValue={options.find(item => item.value == this.props.selectedMentor)}\n        defaultInputValue={this.props.selectedMentor}\n        selectValue={this.props.selectedMentor}\n      />\n    );\n  }\n}\n\nexport default Search;\n\n","import React from 'react';\nimport GitHubLogin from 'react-github-login';\n\nconst onFailure = response => response;\n\nconst Login = ({mentorLogin}) => {\n\treturn (\n    <GitHubLogin \n      clientId=\"6642582293ecc6d430df\"\n      redirectUri=\"\"\n      onSuccess={mentorLogin}\n      onFailure={onFailure}\n    />\n  );\n}\n\nexport default Login;\n  \n","import React, { Component, Fragment } from 'react';\nimport ReactLoading from 'react-loading';\nimport './App.css';\nimport Table from './components/table/table';\nimport Search from './components/search/search';\nimport Login from './components/login/login';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      json: null,\n      selectedMentor: null\n    }\n  }\n  componentDidMount() {\n    setTimeout( () => fetch('./input.json')\n      .then(response => response.json())\n      .then(data => this.setState({ json: data, selectedMentor: localStorage.getItem('mentor')})), 500)\n  }\n  render() {\n    if (this.state.json) {\n      return (\n        <Fragment>\n          <Login mentorLogin = {this.displayMentorByLogin.bind(this)} />\n          <Search mentorsList = {Object.keys(this.state.json.pairs)} updateMentor = {this.updateSelectedMentor.bind(this)} selectedMentor = {this.state.selectedMentor}/>\n          <Table selectedMentor = {this.state.selectedMentor} json = {this.state.json}/> \n        </Fragment>\n      );\n    } else {\n      return (\n         <ReactLoading type={'spinningBubbles'} color={'#0099ff'} height={'20%'} width={'20%'} />\n      )  \n    }\n  }\n  updateSelectedMentor(newMentor) {\n    this.setState({selectedMentor: newMentor});\n  }\n  displayMentorByLogin(data) {\n    const url = 'https://mentor-dashboard-kasatka660.herokuapp.com/authenticate/'+data.code;\n    let userUrl = 'https://api.github.com/user?access_token='\n    fetch(url) \n      .then(response => response.json())\n      .then(data => {\n        fetch(userUrl + data.token)\n          .then(response => response.json())\n          .then(data => this.setState({selectedMentor: data.login}));\n      })  \n      .catch(function (error) {  \n        throw error;  \n      });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}